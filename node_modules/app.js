const express = require('express');
const { Client } = require('pg');
const curl = require('node-curl');

const app = express();
const port = 3000;

// Configure the PostgreSQL connection
const client = new Client({
  user: 'your_db_user',
  host: 'localhost',
  database: 'your_db_name',
  password: 'your_db_password',
  port: 5432,
});
client.connect();

app.use(express.json());

// Define an API endpoint for upserting data
app.post('/upsert/:id', (req, res) => {
  const id = req.params.id;
  const requestBody = req.body.requestBody;
  const custipaddress = req.body.custipaddress;

  // Implement the upsert logic to insert or update data in your database based on the 'id'

  res.json({ message: 'Data upserted successfully' });
});

// Define an API endpoint for the location API
app.get('/location', (req, res) => {
  const ipAddress = req.connection.remoteAddress; // Get the client's IP address

  // Make a request to the external location API
  curl('https://api.country.is/' + ipAddress, (err, stdout) => {
    if (err) {
      console.error(err);
      res.status(500).json({ error: 'Failed to fetch location data' });
      return;
    }

    const locationData = JSON.parse(stdout);

    // Insert location data into your PostgreSQL database
    client.query(
      'INSERT INTO location (requestBody, custipaddress, curlRequestBody, curlRequestResponse, location, createdat) VALUES ($1, $2, $3, $4, $5, now())',
      [JSON.stringify(req.body), ipAddress, JSON.stringify(req.body), stdout, locationData.country],
      (err) => {
        if (err) {
          console.error(err);
          res.status(500).json({ error: 'Failed to insert location data into the database' });
        } else {
          res.json({ location: locationData.country });
        }
      }
    );
  });
});

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});
